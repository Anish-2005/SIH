{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANISH\\\\Documents\\\\PROJECTS\\\\Chatbot-for-FIR\\\\Frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { ThemeContext } from '../ThemeContext'; // Import Theme Context\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\nimport '../styles/Login.css'; // External CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignup, setIsSignup] = useState(false); // State for toggling between login and signup\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State for login status\n  const [userId, setUserId] = useState(''); // State for storing user ID\n\n  const handleLogin = e => {\n    e.preventDefault();\n    // Add your login logic here\n    setUserId(email); // Use email as the user ID for now\n    setIsLoggedIn(true); // Set login status to true after login\n    console.log('Logging in with', {\n      email,\n      password\n    });\n  };\n  const toggleForm = () => {\n    setIsSignup(!isSignup);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      isLoggedIn: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons\",\n          children: theme === 'light' ? 'dark_mode' : 'light_mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: [\"You are logged in, your ID is \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-title\",\n          children: isSignup ? 'Sign Up' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          className: `login-form ${theme}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"login-form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              className: `login-form-input ${theme}`,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"login-form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              className: `login-form-input ${theme}`,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `login-btn primary-btn ${theme}`,\n            children: isSignup ? 'Sign Up' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-toggle-text\",\n          children: [isSignup ? 'Already a user? ' : 'Not a user? ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"login-toggle-link\",\n            onClick: toggleForm,\n            children: isSignup ? 'Login' : 'Sign Up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ZCRJenQWNoyxZOaHplNVWdGYdaw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","ThemeContext","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","theme","toggleTheme","email","setEmail","password","setPassword","isSignup","setIsSignup","isLoggedIn","setIsLoggedIn","userId","setUserId","handleLogin","e","preventDefault","console","log","toggleForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ANISH/Documents/PROJECTS/Chatbot-for-FIR/Frontend/src/pages/Login.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../ThemeContext'; // Import Theme Context\r\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\r\nimport '../styles/Login.css'; // External CSS for styling\r\n\r\nconst Login = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isSignup, setIsSignup] = useState(false); // State for toggling between login and signup\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State for login status\r\n  const [userId, setUserId] = useState(''); // State for storing user ID\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    // Add your login logic here\r\n    setUserId(email); // Use email as the user ID for now\r\n    setIsLoggedIn(true); // Set login status to true after login\r\n    console.log('Logging in with', { email, password });\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsSignup(!isSignup);\r\n  };\r\n\r\n  return (\r\n    <div className={`login-container ${theme}`}>\r\n      <Sidebar isLoggedIn={isLoggedIn} /> {/* Pass login state to Sidebar */}\r\n      <main className=\"main-content\">\r\n        <div className=\"theme-toggle\" onClick={toggleTheme}>\r\n          <span className=\"material-icons\">\r\n            {theme === 'light' ? 'dark_mode' : 'light_mode'}\r\n          </span>\r\n        </div>\r\n        {isLoggedIn ? (\r\n          <h2 className=\"login-title\">You are logged in, your ID is {userId}</h2>\r\n        ) : (\r\n          <>\r\n            <h2 className=\"login-title\">{isSignup ? 'Sign Up' : 'Login'}</h2>\r\n            <form onSubmit={handleLogin} className={`login-form ${theme}`}>\r\n              <div className=\"login-form-item\">\r\n                <label htmlFor=\"email\" className=\"login-form-label\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className={`login-form-input ${theme}`}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"login-form-item\">\r\n                <label htmlFor=\"password\" className=\"login-form-label\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className={`login-form-input ${theme}`}\r\n                  required\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className={`login-btn primary-btn ${theme}`}>\r\n                {isSignup ? 'Sign Up' : 'Login'}\r\n              </button>\r\n            </form>\r\n            <p className=\"login-toggle-text\">\r\n              {isSignup ? 'Already a user? ' : 'Not a user? '}\r\n              <span className=\"login-toggle-link\" onClick={toggleForm}>\r\n                {isSignup ? 'Login' : 'Sign Up'}\r\n              </span>\r\n            </p>\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
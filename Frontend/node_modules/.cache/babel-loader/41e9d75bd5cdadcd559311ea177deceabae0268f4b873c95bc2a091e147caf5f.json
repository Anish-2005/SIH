{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANISH\\\\Downloads\\\\Chatbot-for-FIR\\\\Frontend\\\\src\\\\pages\\\\Query.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { ThemeContext } from '../ThemeContext'; // Import Theme Context\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\nimport '../styles/Query.css'; // External CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Query = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useContext(ThemeContext);\n  const [query, setQuery] = useState('');\n  const [response, setResponse] = useState('');\n\n  // Simulated responses from the database using constants\n  const databaseResponses = {\n    \"How many cases are closed?\": \"There are 10 closed cases.\",\n    \"What is the status of Case A?\": \"Case A is currently under investigation.\",\n    \"What are the open cases?\": \"Cases B and C are currently assigned.\"\n  };\n\n  // Handle submitting query\n  const handleQuerySubmit = e => {\n    e.preventDefault();\n    // Get the response from the constants (simulated database)\n    setResponse(databaseResponses[query] || \"No information found for this query.\");\n    setQuery(''); // Clear input after submission\n  };\n\n  // Simulate voice input (for now just appending some constant text)\n  const handleVoiceInput = () => {\n    setQuery(\"How many cases are closed?\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `query-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons\",\n          children: theme === 'light' ? 'dark_mode' : 'light_mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"query-title\",\n        children: \"Query the Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-field\",\n        children: response ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a query to get a response.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleQuerySubmit,\n        className: \"query-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-with-mic\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Type your query here...\",\n            className: `query-input ${theme}`,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"mic-button\",\n            onClick: handleVoiceInput,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"mic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `btn primary-btn ${theme}`,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Query, \"Rdl5o34x/n+aBlH9rUGH71VcizA=\");\n_c = Query;\nexport default Query;\nvar _c;\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"names":["React","useContext","useState","ThemeContext","Sidebar","jsxDEV","_jsxDEV","Query","_s","theme","toggleTheme","query","setQuery","response","setResponse","databaseResponses","handleQuerySubmit","e","preventDefault","handleVoiceInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/ANISH/Downloads/Chatbot-for-FIR/Frontend/src/pages/Query.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../ThemeContext'; // Import Theme Context\r\nimport Sidebar from '../components/Sidebar'; // Import Sidebar component\r\nimport '../styles/Query.css'; // External CSS for styling\r\n\r\nconst Query = () => {\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const [query, setQuery] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  \r\n  // Simulated responses from the database using constants\r\n  const databaseResponses = {\r\n    \"How many cases are closed?\": \"There are 10 closed cases.\",\r\n    \"What is the status of Case A?\": \"Case A is currently under investigation.\",\r\n    \"What are the open cases?\": \"Cases B and C are currently assigned.\"\r\n  };\r\n\r\n  // Handle submitting query\r\n  const handleQuerySubmit = (e) => {\r\n    e.preventDefault();\r\n    // Get the response from the constants (simulated database)\r\n    setResponse(databaseResponses[query] || \"No information found for this query.\");\r\n    setQuery(''); // Clear input after submission\r\n  };\r\n\r\n  // Simulate voice input (for now just appending some constant text)\r\n  const handleVoiceInput = () => {\r\n    setQuery(\"How many cases are closed?\");\r\n  };\r\n\r\n  return (\r\n    <div className={`query-container ${theme}`}>\r\n      <Sidebar />\r\n      <main className=\"main-content\">\r\n        <div className=\"theme-toggle\" onClick={toggleTheme}>\r\n          <span className=\"material-icons\">\r\n            {theme === 'light' ? 'dark_mode' : 'light_mode'}\r\n          </span>\r\n        </div>\r\n\r\n        <h2 className=\"query-title\">Query the Database</h2>\r\n\r\n        {/* Response Field */}\r\n        <div className=\"response-field\">\r\n          {response ? <p>{response}</p> : <p>Enter a query to get a response.</p>}\r\n        </div>\r\n\r\n        {/* Input and Voice Button */}\r\n        <form onSubmit={handleQuerySubmit} className=\"query-form\">\r\n          <div className=\"input-with-mic\">\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Type your query here...\"\r\n              className={`query-input ${theme}`}\r\n              required\r\n            />\r\n            <button type=\"button\" className=\"mic-button\" onClick={handleVoiceInput}>\r\n              <span className=\"material-icons\">mic</span>\r\n            </button>\r\n          </div>\r\n          \r\n          <button type=\"submit\" className={`btn primary-btn ${theme}`}>\r\n            Enter\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Query;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}